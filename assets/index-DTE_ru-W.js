import{h as V,i as x,r as v,f as O}from"./index-DUoWTvI8.js";function z(){!V.current&&x();const[e]=v.useState(O.current);return e}var S=new Map,R=new WeakMap,E=0,T=void 0;function _(e){return e?(R.has(e)||(E+=1,R.set(e,E.toString())),R.get(e)):"0"}function B(e){return Object.keys(e).sort().filter(t=>e[t]!==void 0).map(t=>`${t}_${t==="root"?_(e.root):e[t]}`).toString()}function $(e){const t=B(e);let n=S.get(t);if(!n){const u=new Map;let c;const i=new IntersectionObserver(s=>{s.forEach(r=>{var o;const h=r.isIntersecting&&c.some(f=>r.intersectionRatio>=f);e.trackVisibility&&typeof r.isVisible>"u"&&(r.isVisible=h),(o=u.get(r.target))==null||o.forEach(f=>{f(h,r)})})},e);c=i.thresholds||(Array.isArray(e.threshold)?e.threshold:[e.threshold||0]),n={id:t,observer:i,elements:u},S.set(t,n)}return n}function j(e,t,n={},u=T){if(typeof window.IntersectionObserver>"u"&&u!==void 0){const o=e.getBoundingClientRect();return t(u,{isIntersecting:u,target:e,intersectionRatio:typeof n.threshold=="number"?n.threshold:0,time:0,boundingClientRect:o,intersectionRect:o,rootBounds:o}),()=>{}}const{id:c,observer:i,elements:s}=$(n),r=s.get(e)||[];return s.has(e)||s.set(e,r),r.push(t),i.observe(e),function(){r.splice(r.indexOf(t),1),r.length===0&&(s.delete(e),i.unobserve(e)),s.size===0&&(i.disconnect(),S.delete(c))}}function C({threshold:e,delay:t,trackVisibility:n,rootMargin:u,root:c,triggerOnce:i,skip:s,initialInView:r,fallbackInView:o,onChange:h}={}){var f;const[g,A]=v.useState(null),b=v.useRef(h),[l,p]=v.useState({inView:!!r,entry:void 0});b.current=h,v.useEffect(()=>{if(s||!g)return;let a;return a=j(g,(y,w)=>{p({inView:y,entry:w}),b.current&&b.current(y,w),w.isIntersecting&&i&&a&&(a(),a=void 0)},{root:c,rootMargin:u,threshold:e,trackVisibility:n,delay:t},o),()=>{a&&a()}},[Array.isArray(e)?e.toString():e,g,c,u,i,s,n,o,t]);const M=(f=l.entry)==null?void 0:f.target,I=v.useRef(void 0);!g&&M&&!i&&!s&&I.current!==M&&(I.current=M,p({inView:!!r,entry:void 0}));const d=[A,l.inView,l.entry];return d.ref=d[0],d.inView=d[1],d.entry=d[2],d}export{C as a,z as u};
